#pragma once

class ScriptEngine : ScriptApi::ScriptFramework, ScriptApi::ScriptCallbackInterface {

public:
    virtual ScriptEngine::~ScriptEngine();
    virtual void initialize(void);
    virtual void shutdown(void);
    virtual void onLogReceived(std::string const&);
    virtual void onInfoReceived(std::string const&);
    virtual void onWarnReceived(std::string const&);
    virtual void onErrorReceived(std::string const&);
    virtual void makeErrorResultObject(ScriptApi::ScriptObjectHandle &);
    virtual void processLogCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processRegisterEventDataCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processCreateEventDataCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processListenForEventCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processBroadcastEventCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processCreateEntityCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processDestroyEntityCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processIsValidEntityCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processRegisterComponentCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processCreateComponentCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processDestroyComponentCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processHasComponentCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processGetComponentCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processApplyComponentChangesCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processRegisterQueryCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processAddFilterToQueryCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processGetEntitiesFromQueryCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processGetBlockCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processGetBlocksCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processExecuteCommandCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processRegisterSystemCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processInfoCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processWarningCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void processErrorCallback(std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    virtual void _registerSystemObjects(ScriptApi::ScriptObjectHandle const&);

    void _getVersionInfo(ScriptApi::ScriptObjectHandle const&, ScriptApi::ScriptVersionInfo &);
    void _setVersionInfo(ScriptApi::ScriptObjectHandle const&, ScriptApi::ScriptVersionInfo const&);
    void serializeJsonToScriptObjectHandle(ScriptApi::ScriptObjectHandle &, Json::Value const&);
    void deserializeScriptObjectHandleToJson(ScriptApi::ScriptObjectHandle const&, Json::Value &);
    void helpGetVec3(ScriptApi::ScriptObjectHandle const&, std::string const&, Vec3 &);
    void helpDefineVec3(ScriptApi::ScriptObjectHandle &, std::string const&, Vec3 const&);
    void queueScript(Core::Path const&, std::string const&, std::string const&, std::string const&);
    void _addScriptToQueue(ScriptEngine::ScriptQueueData const&);
    void startScriptLoading(void);
    void _loadScriptQueue(void);
    bool isScriptingEnabled(void);
    ScriptEngine(ScriptApi::ApiScriptType);
    void setScriptEventCoordinator(std::unique_ptr<ScriptEventCoordinator, std::default_delete<ScriptEventCoordinator>> &&);
    bool isInitialized(void)const;
    void update(void);
    void processScriptReportItems(void);
    void _processSystemUpdate(void);
    void _processSystemShutdown(void);
    void fireEventToScript(EventInfo const&, ScriptApi::ScriptObjectHandle &&);
    void getLoggerConfig(void);
    void getLoggerConfig(void)const;
    void helpDeserialize(ScriptApi::ScriptObjectHandle const&);
    void helpDefinePosition(Vec3 const&, ScriptApi::ScriptObjectHandle &);
    void helpSetPosition(Vec3 const&, ScriptApi::ScriptObjectHandle const&);
    void helpDefinePosition(BlockPos const&, ScriptApi::ScriptObjectHandle &);
    void helpSetPosition(BlockPos const&, ScriptApi::ScriptObjectHandle const&);
    void helpGetPosition(ScriptApi::ScriptObjectHandle const&, Vec3 &);
    void helpGetPosition(ScriptApi::ScriptObjectHandle const&, BlockPos &);
    void getScriptEventCoordinator(void);
    void _validateObjectIdentifier(std::string const&)const;
    void _runScript(ScriptEngine::ScriptQueueData const&);
    void _processSystemInitialize(void);
    void _callSingleScriptCallback(ScriptApi::ScriptSystemInfo const&, std::string const&, std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
    void _callAllScriptCallback(std::string const&, std::vector<ScriptApi::ScriptObjectHandle, std::allocator<ScriptApi::ScriptObjectHandle>> const&, ScriptApi::ScriptObjectHandle&);
};
