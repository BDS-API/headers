#pragma once

class NetherDimension : Dimension {

    virtual void Nether~NetherDimension();
    virtual void Nether~NetherDimension();
    virtual void BlockSourceListener::onSourceCreated(BlockSource &);
    virtual void BlockSourceListener::onSourceDestroyed(BlockSource &);
    virtual void BlockSourceListener::onAreaChanged(BlockSource &, BlockPos const&, BlockPos const&);
    virtual void onBlockChanged(BlockSource &, BlockPos const&, unsigned int, Block const&, Block const&, int, ActorBlockSyncMessage const*);
    virtual void BlockSourceListener::onBrightnessChanged(BlockSource &, BlockPos const&);
    virtual void BlockSourceListener::onBlockEntityChanged(BlockSource &, BlockActor &);
    virtual void BlockSourceListener::onBlockEntityAboutToBeRemoved(BlockSource &, std::shared_ptr<BlockActor>);
    virtual void BlockSourceListener::onEntityChanged(BlockSource &, Actor &);
    virtual void onBlockEvent(BlockSource &, int, int, int, int, int);
    virtual void LevelListener::allChanged(void);
    virtual void LevelListener::addParticle(ParticleType, Vec3 const&, Vec3 const&, int, CompoundTag const*, bool);
    virtual void LevelListener::sendServerLegacyParticle(ParticleType, Vec3 const&, Vec3 const&, int);
    virtual void LevelListener::addParticleEffect(HashedString const&, Vec3 const&, MolangVariableMap const&);
    virtual void LevelListener::addParticleEffect(HashedString const&, Actor const&, HashedString const&, Vec3 const&, MolangVariableMap const&);
    virtual void LevelListener::addTerrainParticleEffect(BlockPos const&, Block const&, Vec3 const&, float, float, float);
    virtual void LevelListener::addBreakingItemParticleEffect(Vec3 const&, ParticleType, TextureUVCoordinateSet const&, bool);
    virtual void LevelListener::playMusic(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, Vec3 const&, float, float);
    virtual void LevelListener::playStreamingMusic(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, int, int, int);
    virtual void LevelListener::onEntityAdded(Actor &);
    virtual void LevelListener::onEntityRemoved(Actor &);
    virtual void onNewChunk(BlockSource &, LevelChunk &);
    virtual void LevelListener::onNewChunkFor(Player &, LevelChunk &);
    virtual void onChunkLoaded(LevelChunk &);
    virtual void LevelListener::onChunkUnloaded(LevelChunk &);
    virtual void onLevelDestruction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void LevelListener::levelEvent(LevelEvent, Vec3 const&, int);
    virtual void LevelListener::levelEvent(LevelEvent, CompoundTag const&);
    virtual void LevelListener::levelSoundEvent(LevelSoundEvent, Vec3 const&, int, ActorDefinitionIdentifier const&, bool, bool);
    virtual void LevelListener::levelSoundEvent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, Vec3 const&, float, float);
    virtual void LevelListener::stopSoundEvent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void LevelListener::stopAllSounds(void);
    virtual void LevelListener::takePicture(cg::ImageBuffer &, Actor *, Actor *, ScreenshotOptions &);
    virtual void LevelListener::playerListChanged(void);
    virtual void Netherinit(void);
    virtual void tick(void);
    virtual void tickRedstone(void);
    virtual void NethercreateGenerator(void);
    virtual void NetherupdateLightRamp(void);
    virtual void NetherisNaturalDimension(void)const;
    virtual void NetherisValidSpawn(int, int)const;
    virtual void NethergetFogColor(float)const;
    virtual void NethergetMaxFogEnd(void)const;
    virtual void NethergetMaxFogStart(void)const;
    virtual void NetherisFoggyAt(int, int)const;
    virtual void getCloudHeight(void)const;
    virtual void getDefaultBiome(void)const;
    virtual void NethermayRespawn(void)const;
    virtual void hasGround(void)const;
    virtual void getSpawnPos(void)const;
    virtual void getSpawnYPosition(void)const;
    virtual void hasBedrockFog(void);
    virtual void getClearColorScale(void);
    virtual void NethershowSky(void)const;
    virtual void isDay(void)const;
    virtual void getSunIntensity(float, Vec3 const&, float)const;
    virtual void NethertranslatePosAcrossDimension(Vec3 const&, AutomaticID<Dimension, int>)const;
    virtual void deserialize(CompoundTag const&);
    virtual void serialize(CompoundTag &)const;
    virtual void sendBroadcast(Packet const&, Player *);
    virtual void startLeaveGame(void);
    virtual void NethergetTimeOfDay(int, float)const;
    virtual void ;
    virtual void `non-virtual thunk to'Nether~NetherDimension();
    virtual void `non-virtual thunk to'Nether~NetherDimension();
    virtual void `non-virtual thunk to'deserialize(CompoundTag const&);
    virtual void `non-virtual thunk to'serialize(CompoundTag &)const;
}
