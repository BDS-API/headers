#pragma once

class MinecraftEventing : IMinecraftEventing {

public:
    static long MinecraftEventing::sMutex;
    static long MinecraftEventing::mUseMethodMap;
    static long MinecraftEventing::mAcquisitionMethodMap;

    virtual ~MinecraftEventing();
    virtual void fireEventPackUpgradeAttempt(PackManifest const&, PackReport const&);
    virtual void init(Social::IUserManager &);
    virtual void getShouldHaveAchievementsEnabled(void);
    virtual void setShouldHaveAchievementsEnabled(bool);
    virtual void getAchievementsAlwaysEnabled(void);
    virtual void getPrimaryLocalUserId(void);
    virtual void forceSendEvents(void);
    virtual void getEventManager(void)const;
    virtual void updatePrimaryLocalUserId(unsigned int const&);
    virtual void updateIsLegacyPlayer(bool);
    virtual void updateIsTrial(bool)const;
    virtual void registerOptionsObserver(std::shared_ptr<Options>);
    virtual void addListener(std::unique_ptr<Social::Events::IEventListener, std::default_delete<Social::Events::IEventListener>>);
    virtual void fireEventStartClient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, bool);
    virtual void fireEventStartWorld(IMinecraftEventing::NetworkType, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, Social::MultiplayerServiceIdentifier);
    virtual void fireGlobalResourcePackCrashRecovery(PackInstance &, mce::UUID, int);
    virtual void fireServerConnectionEvent(IMinecraftEventing::ServerConnectionOutcome, unsigned int, double, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireServerConnectionAttemptEvent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireTextToSpeechToggled(bool, bool);
    virtual void fireEventClientIdCreated(int);
    virtual void fireEventFloatPropertyList(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, float>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, float>>> const&);
    virtual void fireEventHardwareInfo(void);
    virtual void fireEventOptionsUpdated(std::shared_ptr<Options>, InputMode, bool);
    virtual void fireEventChatSettingsUpdated(Player const*, std::vector<Social::Events::Property, std::allocator<Social::Events::Property>> const&)const;
    virtual void fireEventPerformanceMetrics(ProfilerLiteTelemetry const&);
    virtual void fireEventPlayerTravelled(Player *, float);
    virtual void fireEventPromotionNotificationClicked(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventVideoPlayed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventRespondedToAcceptContent(ResourcePacksInfoData const&, bool);
    virtual void fireEventSignInToXboxLive(Social::XboxLiveUser const&, bool, IMinecraftEventing::SignInStage);
    virtual void fireEventSignOutOfXboxLive(Social::XboxLiveUser const&);
    virtual void fireEventAppSuspended(bool);
    virtual void fireEventAppPaused(void);
    virtual void fireEventAppUnpaused(void);
    virtual void fireEventAppResumed(void);
    virtual void fireEventSplitScreenUpdated(IClientInstance const&);
    virtual void fireEventScreenChanged(unsigned int const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&);
    virtual void fireEventPopupClosed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&)const;
    virtual void fireEventGameplayTipShown(int, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventWorldImported(long, unsigned long);
    virtual void fireCurrentInputUpdated(IClientInstance const&);
    virtual void fireEventPackImportStarted(PackManifest const&);
    virtual void fireEventPackImportedCompleted(ResourcePack const*, PackManifest const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventTreatmentPackApplied(PackManifest const&);
    virtual void fireEventPackPlayed(PackInstance const&, unsigned int);
    virtual void fireEventNewUserPackDetected(PackManifest const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, bool);
    virtual void fireEventPackHashChanged(PackManifest const&);
    virtual void fireEventTreatmentPackDownloaded(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>);
    virtual void fireEventTreatmentPackRemoved(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>);
    virtual void fireEventContentLogsInWorldSession(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, unsigned int, unsigned int);
    virtual void fireRealmConnectionEventStart(IMinecraftEventing::RealmConnectionFlow);
    virtual void fireRealmConnectionEventGenericLambdaCalled(IMinecraftEventing::RealmConnectionFlow, IMinecraftEventing::RealmConnectionLambda, IMinecraftEventing::RealmConnectionResult);
    virtual void fireEventCompoundCreatorCreated(int, int);
    virtual void fireEventElementConstructorUsed(int, int, IMinecraftEventing::ElementConstructorUseType);
    virtual void fireEventEntitySpawned(Player *, int, unsigned int);
    virtual void fireEventReducerBlockEntered(ItemDescriptor const&);
    virtual void fireEventRespawn(Player &, int);
    virtual void fireEventServerRespawnSearchTime(Player &, PlayerRespawnTelemetryData const&);
    virtual void firePackSettingsEvent(PackSettings const&, PackManifest const&);
    virtual void removeTestRunIdTag(void);
    virtual void removeTestTelemetryTag(void);
    virtual void setTestRunIdTag(int);
    virtual void setTestTelemetryTag(char const*);
    virtual void stopDebugEventLoggingForAllListeners(void);
    virtual void tick(void);
    virtual void updateEditionType(void);
    virtual void fireEventMultiplayerConnectionStateChanged(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, unsigned int, unsigned int, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventJoinCanceled(LoadingState);
    virtual void fireClubsEngagementEvent(IMinecraftEventing::ClubsEngagementAction, IMinecraftEventing::ClubsEngagementTargetType, char const*, Realms::RealmId, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>);
    virtual void fireClubsOpenFeedScreenEvent(IMinecraftEventing::ClubsFeedScreenSource, Realms::RealmId, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>);
    virtual void fireEventEntitlementListInfo(std::vector<ContentIdentity, std::allocator<ContentIdentity>> &, bool);
    virtual void fireEventFileTransmissionState(IMinecraftEventing::FileTransmissionDirection, IMinecraftEventing::FileTransmissionState, IMinecraftEventing::FileTransmissionType, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, unsigned long, double);
    virtual void fireEventIncognitoFailure(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventDeviceAccountFailure(IMinecraftEventing::SignInStage, IMinecraftEventing::DeviceAccountFailurePhase, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventDeviceAccountSuccess(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventStorage(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventStoreOfferPurchaseAttempt(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, Offer &);
    virtual void fireEventStoreOfferPurchaseResolved(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, IMinecraftEventing::PurchaseStage, IMinecraftEventing::PurchaseResult, Offer &, PurchasePath);
    virtual void fireEventStoreOfferPurchaseFailure(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, unsigned short, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, PurchaseInfo const&);
    virtual void fireEventPurchaseResolved(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, IMinecraftEventing::StoreType, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, IMinecraftEventing::PurchaseStage, IMinecraftEventing::PurchaseResult, PurchasePath);
    virtual void fireEventPurchaseFailureDetails(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventTreatmentsCleared(void);
    virtual void fireEventTreatmentsSet(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&);
    virtual void fireEventSetMultiplayerCorrelationId(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventGameSessionStart(Player *, IClientInstance &, Level &, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, bool);
    virtual void fireEventInGamePlatformFriendsRetrieved(std::vector<Social::PlatformUserProfileData, std::allocator<Social::PlatformUserProfileData>> &);
    virtual void prepEventSearchCatalogRequest(SearchRequestTelemetry const&);
    virtual void fireEventSearchCatalogRequest(SearchRequestTelemetry const&);
    virtual void fireEventArmorStandItemEquipped(ArmorStand const&, ItemDescriptor const&);
    virtual void fireEventArmorStandPosed(ArmorStand const&);
    virtual void fireEventPlayerBounced(Player *, Block const&, int);
    virtual void fireEventSetValidForAchievements(Player *, bool);
    virtual void fireEventWorldLoaded(Player *, Level &, ResourcePackManager &, ResourcePacksInfoData &);
    virtual void fireMinecraftVersionLaunched(bool);
    virtual void fireMinecraftVersionInviteAccepted(bool, unsigned long);
    virtual void fireDayOneExperienceStateChanged(IMinecraftEventing::DayOneExperienceState, std::optional<unsigned int>, std::optional<unsigned long>);
    virtual void fireWorldConversionAttemptEvent(Legacy::WorldConversionReport const&);
    virtual void fireWorldConversionInitiatedEvent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireLegacyWorldUploadEvent(Legacy::WorldConversionReport const&, bool, WorldConversionError);
    virtual void fireEventAssertFailed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> &);
    virtual void fireChatUsedEvent(unsigned int, bool);
    virtual void fireEventJoinByCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventBlockPlacedByCommand(Block const&, int);
    virtual void fireEventEntityDanced(int, int, unsigned char);
    virtual void fireEventDwellerDied(Actor &, ActorDamageSource const&, bool);
    virtual void fireEventDwellerRemoved(Actor &, bool);
    virtual void fireEventScriptLoaded(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, unsigned long);
    virtual void fireEventScriptRan(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, unsigned long, bool, bool);
    virtual void fireEventDevConsoleOpen(void);
    virtual void fireEventDevConsoleCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventNpcPropertiesUpdated(Actor &, bool);
    virtual void fireEventBoardTextUpdated(ChalkboardBlockActor &);
    virtual void fireEventCameraUsed(bool);
    virtual void fireEventPortfolioExported(int, int);
    virtual void fireQuickPlayEvent(void);
    virtual void fireLibraryButtonPressed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireCourseButtonPressed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireLessonActionTaken(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, IMinecraftEventing::EducationLessonAction);
    virtual void fireInAppCodeBuilderActivated(IMinecraftEventing::OpenCodeMethod);
    virtual void fireCodeCommandButtonPressed(void);
    virtual void fireIDESelected(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&)const;
    virtual void fireEventEduResources(void)const;
    virtual void fireEventEduiOSPurchaseTransaction(TransactionStatus const&)const;
    virtual void fireEventEduOptionSet(Option const&)const;
    virtual void fireEventCodeBuilderClosed(void)const;
    virtual void fireEventEduServiceStatus(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, int, buffer_span<std::pair<gsl::basic_string_span<char const, -1l>, gsl::basic_string_span<char const, -1l>>>)const;
    virtual void fireEventWebviewDownload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, WebviewDownloadInfo const&)const;
    virtual void fireEduServiceRequestFailed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, buffer_span<std::pair<gsl::basic_string_span<char const, -1l>, gsl::basic_string_span<char const, -1l>>>)const;
    virtual void fireEventButtonPressed(gsl::basic_string_span<char const, -1l>, buffer_span<std::pair<gsl::basic_string_span<char const, -1l>, gsl::basic_string_span<char const, -1l>>>)const;
    virtual void fireEventWorldExported(long, unsigned long);
    virtual void fireEventControlRemappedByPlayer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, RawInputType, int)const;
    virtual void fireEventDifficultySet(Difficulty, Difficulty);
    virtual void fireEventGameRulesUpdated(bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventGameRulesUpdated(int, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventGameRulesUpdated(float, float, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventDefaultGameTypeChanged(GameType, GameType);
    virtual void fireEventConnectionFailed(IMinecraftEventing::ConnectionFailureReason);
    virtual void fireEventOfferRated(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, int, int, int, double);
    virtual void fireEventNewContentCheckCompleted(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, bool);
    virtual void fireEventHowToPlayTopicChanged(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, InputMode);
    virtual void fireEventApiInit(float, unsigned long);
    virtual void fireEventWorldFilesListed(unsigned long, unsigned long, unsigned long, unsigned long);
    virtual void fireEventLabTableCreated(int, int, int);
    virtual void fireEventPlayerMessageSay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventPlayerMessageTell(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventPlayerMessageChat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventPlayerMessageMe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventPlayerMessageTitle(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventRealmShared(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, IMinecraftEventing::ShareMode const&, Realms::RealmId const&);
    virtual void fireEventRealmMemberlistCleared(Realms::RealmId const&, int const&);
    virtual void fireEventRealmUrlGenerated(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, Realms::RealmId const&);
    virtual void fireEventStructureExport(glTFExportData const&, IMinecraftEventing::ExportOutcome, IMinecraftEventing::ExportStage)const;
    virtual void fireEventContentShared(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, IMinecraftEventing::ShareMode const&);
    virtual void fireEventStorageReport(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventStackLoaded(StackStats const&);
    virtual void fireEventUnknownBlockReceived(NewBlockID const&, unsigned short);
    virtual void fireEventSignInEdu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, ADRole, IMinecraftEventing::EduSignInStage, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>> const&);
    virtual void fireEventPopupFiredEdu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, ActiveDirectoryAction);
    virtual void fireEventAppConfigurationChanged(void);
    virtual void fireEventPurchaseGameAttempt(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventTrialDeviceIdCorrelation(long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventPushNotificationPermission(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventPushNotificationReceived(PushNotificationMessage const&);
    virtual void fireEventPushNotificationOpened(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventUploadSkin(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventLicenseCheck(bool, ExtraLicenseData &);
    virtual void fireEventStorePromotionNotification(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventWorldGenerated(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, LevelSettings const&, bool);
    virtual void fireEventExperimentalGameplay(bool, bool);
    virtual void fireEventCopyWorldEducationEnabled(void);
    virtual void fireEventStoreOfferClicked(int, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventStoreSearch(StoreSearchTelemetryData const&);
    virtual void fireEventSearchItemSelected(int, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, int, int);
    virtual void fireEventUgcDownloadStarted(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventUgcDownloadCompleted(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, bool);
    virtual void fireEventPurchaseAttempt(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, IMinecraftEventing::StoreType, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireRealmConnectionEventRealmAPIRequest(IMinecraftEventing::RealmConnectionFlow);
    virtual void fireRealmConnectionEventRealmAPIResponse(IMinecraftEventing::RealmConnectionFlow, int);
    virtual void onUserSignIn(Social::XboxLiveUser &);
    virtual void onUserSignOut(Social::XboxLiveUser &);
    virtual void fireEventChunkLoaded(LevelChunk &);
    virtual void fireEventChunkUnloaded(LevelChunk &);
    virtual void fireEventChunkChanged(LevelChunk &);
    virtual void fireEventMultiplayerSessionUpdate(Level const*);
    virtual void fireEventLevelDestruct(void);
    virtual void flagEventDeepLink(void);
    virtual void flagEventPlayerGameTypeDefault(bool);
    virtual void fireEventLevelDatLoadFailed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, bool);
    virtual void fireEventPersonaItemPreviewed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, unsigned int, unsigned int, IMinecraftEventing::PromotionType, bool, IMinecraftEventing::StoreType);
    virtual void fireEventPersonaSkinChanged(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, bool);
    virtual void fireEventPersonaAvatarUpdated(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&, std::vector const&<bool, std::allocator<bool>>, std::vector const&<bool, std::allocator<bool>>, bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, bool);
    virtual void fireEventPersonaAvatarsListed(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>> const&);
    virtual void fireEventPersonaFailedUnknownPieceType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventPersonaFailedPieceNotInRepo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventPersonaFailedTopBottomMissing(bool, bool);
    virtual void firePersonaMissingCapeTextureNameErrorEvent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void firePersonaMissingCapeTextureFileErrorEvent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void firePersonaInitalizationCompleteEvent(unsigned int);
    virtual void firePersonaNumberOfCategories(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventPersonaGeneralError(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventWorldHistoryPackSourceMissingDuringUpgrade(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireEventPersonaLoadingPieces(unsigned int, double);
    virtual void fireEventPersonaFailedPieceNotOwned(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, bool);
    virtual void fireEventFixedMarketplaceWorldUsingV2VillagersToUseV1(void);
    virtual void fireEventAccountTransferStateChanged(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, TransferState, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    virtual void fireStructureBlockAction(IMinecraftEventing::StructureBlockActionType, StructureEditorData const&, StructureTelemetryClientData const*);
    virtual void fireStructureBlockRedstoneActivated(IMinecraftEventing::StructureBlockActionType, StructureEditorData const&, StructureTelemetryClientData const*);
    virtual void fireStructureBlockLoadedInUnloadedChunks(unsigned int, BlockPos const&, BlockPos const&);

    void MinecraftEventing(Core::Path const&);
    void init(void);
    void unregisterOptionsObserver(void);
    void fireEventGameTypeChanged(Player *, GameType, GameType);
    void fireEventHeartbeat(void);
    void fireEventBehaviorErrored(Player *, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>);
    void fireEventBehaviorFailed(Player *, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>);
    void fireEventPlayerMovementSettings(Player *);
    void fireEventPlayerMovementAnomalyDetected(Player *, MovementEventType, float, float, float, float, float);
    void fireEventPlayerMovementCorrected(Player *, float, float, bool, float, float, int);
    void fireEventPOIBlockUsageAttempt(Player *, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, MinecraftEventing::PoiEventBlockType);
    void fireEventPOIBlockUsed(Player *, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, MinecraftEventing::PoiEventBlockType);
    void fireEventBarrelBlockUsed(Player *, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, MinecraftEventing::POIBlockInteractionType);
    void fireEventBellBlockUsed(Player *, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    void fireEventCampfireBlockUsed(Player *, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, MinecraftEventing::POIBlockInteractionType);
    void fireEventCartographyBlockUsed(Player *, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, MapOutputType);
    void fireEventCauldronBlockUsed(Player *, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, MinecraftEventing::POIBlockInteractionType);
    void fireEventComposterBlockUsed(Player *, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, MinecraftEventing::POIBlockInteractionType);
    void fireEventGrindstoneBlockUsed(Player *, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, MinecraftEventing::POIBlockInteractionType);
    void fireEventLecternBlockUsed(Player *, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, MinecraftEventing::POIBlockInteractionType);
    void fireEventBlockBroken(Player *, Block const&, MinecraftEventing::BlockPlacementMethod, int);
    void fireEventBlockPlaced(Player *, Block const&, bool);
    void fireEventBlockFound(Player *, BlockPos const&);
    void fireEventCraftingSessionEnd(Player *);
    void fireEventCraftingSessionStart(Player *, unsigned int);
    void fireEventEndOfDay(Player *, Level &);
    void fireEventItemAcquired(Player *, ItemDescriptor const&, unsigned int, ItemAcquisitionMethod);
    void fireEventItemEquipped(Player *, ItemInstance const&, int);
    void fireEventItemCrafted(Player *, ItemInstance const&, bool, bool, bool, int, int, int, bool, bool);
    void fireEventItemDestroyed(Player *, ItemDescriptor const&, unsigned int);
    void fireEventItemDropped(Player *, ItemDescriptor const&);
    void fireEventItemSmelted(Player *, ItemDescriptor const&, ItemDescriptor const&);
    void fireEventItemUsed(Player *, ItemDescriptor const&, ItemUseMethod);
    void fireEventItemEnchanted(Player *, ItemDescriptor const&, ItemEnchants const&);
    void fireEventItemEnchanted(Player *, ItemDescriptor const&, unsigned int, int);
    void fireEventItemNamed(Player *, ItemDescriptor const&);
    void fireEventTradeCompleted(Player *, Actor *, ItemDescriptor const&, ItemDescriptor const&, ItemInstance const&, int);
    void fireEventJukeboxUsed(Player *, ItemDescriptor const&);
    void fireEventMenuShown(Player *, unsigned int, unsigned int);
    void fireEventMobKilled(Player *, Actor *, Mob &, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, int);
    void fireEventBossKilled(Player *, int, long, int);
    void fireEventEntityInteracted(Player *, int, MinecraftEventing::InteractionType, int, unsigned char);
    void fireEventMobBorn(Player *, int, int, unsigned char);
    void fireEventAgentCommand(Player &, int, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    void fireEventAgentCreated(Player &);
    void fireEventPlayerTeleported(Player *, float, MinecraftEventing::TeleportationCause, int);
    void fireEventPlayerDied(Player *, int, int, int, bool);
    void fireEventPlayerSaved(Player *);
    void fireEventPortalBuilt(Player *, AutomaticID<Dimension, int>);
    void fireEventPortalUsed(Player *, AutomaticID<Dimension, int>, AutomaticID<Dimension, int>);
    void fireEventPotionBrewed(Player *, ItemDescriptor const&, unsigned int);
    void fireEventCauldronUsed(Player *, short, unsigned int, short);
    void fireEventFishBucketed(Player *, int, int, int, bool);
    void fireEventSpecialMobBuilt(Player *, Mob &);
    void fireEventVehicleExited(Player *, unsigned int, unsigned long);
    void fireEventCaravanChanged(Mob &, int);
    void fireEventMobEffectChanged(Mob &, MobEffectInstance const&, MinecraftEventing::ChangeType);
    void fireRaidEvent(Player *, int, int, bool);
    void fireEventCommandBlockEdited(Player *, BaseCommandBlock const&, bool, CommandBlockMode, bool, bool);
    void _fireStructureBlockAction(IMinecraftEventing::StructureBlockActionType, StructureEditorData const&, bool, StructureTelemetryClientData const*);
    void fireEventBookEdited(Player *, ItemDescriptor const&, unsigned int);
    void fireEventBookImageImported(Player *);
    void fireEventBookCopied(Player *, ItemInstance const&);
    void fireEventBookExported(Player *, int, int);
    void fireEventSignedBookOpened(Player *, bool);
    void fireEventPatternAdded(Player *, ItemInstance const&);
    void fireEventPatternRemoved(Player *, int, int, int, int, int);
    void _generateWorldSessionId(void);
    void fireEventWorldUnloaded(Player *, LevelData const&, unsigned int);
    void fireEventAwardAchievement(Player *, MinecraftEventing::AchievementIds);
    void fireEventAwardTrophy(Player const*, unsigned int);
    void fireEventMultiplayerRoundStart(Player *, Level &, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, int, Realms::World const&);
    void fireEventMultiplayerRoundEnd(Player *, int);
    void fireEventSlashCommandExecuted(Player *, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, int, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    void fireEventCaravanChanged(Player *, int, int);
    void _getUserManagerConst(void)const;
    void fireEventFirstTimeClientOpen(void);
    void fireEventGameRulesLoaded(Player *, GameRules const&);
    void fireEventPlayerTransform(Player &);
    void fireEventPlayerJoin(Player &);
    void fireEventPlayerLeave(Player &);
    void fireEventPlayerMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&);
    void fireEventItemInteracted(Player *, ItemInstance const&, MinecraftEventing::ItemInteractMethod);
    void _fireEventPackImportStage(ResourcePack const*, PackManifest const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&, bool, bool);
    void addBehaviorPackData(Social::Events::Event &, BehaviorPackContents const&);
    void addResourcePackData(Social::Events::Event &, ResourcePackContents const&);
    void _addConversionReportData(Social::Events::Event &, mclc::ConversionReport const*);
    void _getAccountType(std::shared_ptr<Social::User>);
    void fireEventPetDied(Player *, bool, Actor *, ActorType, unsigned int);
};
